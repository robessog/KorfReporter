{"version":3,"sources":["app.ts"],"names":[],"mappings":";AAAA,MAAY,OAAO,WAAM,SAAS,CAAC,CAAA;AACnC,MAAY,MAAM,WAAM,WAAW,CAAC,CAAA;AACpC,MAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAE7B,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AACpC,IAAI,EAAE,GAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AACzB,IAAI,UAAU,GAAG,IAAI,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AAElC,IAAI,aAAa,GAAG,YAAY,CAAC;AACjC,IAAI,MAAM,GAAG,QAAQ,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG;IAClB,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AAEH,EAAE,CAAuB,EAAE,CAAC,YAAY,EAAE,CAAC,MAAM;IAC7C,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACnC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAEpB,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAS;QACxB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEvB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,IAAS;QAChC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,IAAS;QAC9B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;IACtB,OAAO,CAAC,GAAG,CAAE,2BAA2B,GAAG,UAAU,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC","file":"app.js","sourcesContent":["import * as express from 'express';\r\nimport * as socket from 'socket.io';\r\nimport * as http from 'http';\r\n\r\nvar app = express();\r\nvar server = http.createServer(app);\r\nvar io =  socket(server);\r\nvar portNumber = 8000;\r\napp.use(express.static('public'));\r\n\r\nlet gameNamespace = '/gameEvent';\r\nlet gameId = 'game15';\r\n\r\napp.get('/', (req, res) => {\r\n    res.send('Hello from Node JS');\r\n});\r\n\r\nio./*of(gameNamespace).*/on('connection', (socket) => {\r\n    console.log('client connected :)');\r\n    socket.join(gameId);\r\n        \r\n    socket.on('join', (data: any) => {\r\n        console.log('client sent join message.');\r\n        console.warn(data);\r\n        \r\n    });\r\n    \r\n    socket.on('newGameEvent', (data: any) => {\r\n        socket.broadcast.emit('newGameEvent', data);\r\n    });\r\n    \r\n    socket.on('disconnect', (data: any) => {\r\n        console.log('disconnectied');\r\n        console.log(data);\r\n    });\r\n\r\n});\r\n\r\nserver.listen(portNumber, () => {\r\n    console.log( 'Express! listens on port ' + portNumber);\r\n});\r\n"]}