{"version":3,"sources":["Model/EventGuess.ts"],"names":[],"mappings":";;;;;;;;;;;YAEA;gBAEI,YAAY,IAAY,EAAE,MAAc,EAAE,EAAU,EAAE,SAA2B;oBACtE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;oBACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBAClC,CAAC;gBAQD,IAAI,oBAAoB;oBACpB,MAAM,CAAC,yCAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9D,CAAC;YACL,CAAC;YAlBD,mCAkBC,CAAA","file":"Model/EventGuess.js","sourcesContent":["import {Domain} from './../SHARED_SRC/Domain/EventType';\r\nimport {EventTypeTranslator} from './../SHARED_SRC/Domain/EventTypeTranslator';\r\nexport class EventGuess {\r\n\r\n    constructor(team: string, player: string, nr: number, eventType: Domain.EventType) {\r\n               this.eventType = eventType;\r\n               this.teamName = team;\r\n               this.playerName = player;\r\n               this.playerNumber = nr;\r\n    }\r\n    \r\n    \r\n    teamName: string;\r\n    playerNumber: number;\r\n    playerName: string;\r\n    eventType: Domain.EventType;\r\n    \r\n    get eventTypeDisplayName(): string {\r\n        return EventTypeTranslator.getDisplayName(this.eventType);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}