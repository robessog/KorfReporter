{"version":3,"sources":["Model/EventAbbreviationResolver.ts"],"names":[],"mappings":";;;;;;;YAMA;gBAQI,OAAO,YAAY,CAAE,YAAoB;oBACrC,MAAM,CAAC,yBAAyB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;gBAC5D,CAAC;YACL,CAAC;YARkB,kCAAQ,GAAuC;gBAC1D,GAAG,EAAE,CAAyB;gBAC9B,GAAG,EAAE,CAA2B;aAClC,CAAE;YANR,iEAWC,CAAA","file":"Model/EventAbbreviationResolver.js","sourcesContent":["// /// <reference path=\"./../../bower_components/typescript-dotnet/source/System/Collections/Dictionaries/IDictionary.d.ts\" />\r\n\r\n// import {Dictionary} from './../bower_components/typescript-dotnet/source/System/Collections/Dictionaries/Dictionary';\r\n// import {Dictionary} from './../bower_components/typescript-dotnet/dist/system/System/Collections/Dictionaries/Dictionary';\r\nimport {Domain} from './../SHARED_SRC/Domain/EventType';\r\n\r\nexport class EventAbbreviationResolver {\r\n    \r\n    // abbrvMap: IDictionary<string, Domain.EventType> = new Dict.Dictionary<string, Domain.EventType>();\r\n    private static abbrvMap: {[key: string ]: Domain.EventType} = {\r\n        'l': Domain.EventType.LongGoal,\r\n        'm': Domain.EventType.MediumGoal\r\n     } ;\r\n\r\n    static getEventType (abbreviation: string) : Domain.EventType {\r\n        return EventAbbreviationResolver.abbrvMap[abbreviation];       \r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}