{"version":3,"sources":["System/Collections/Sorting/KeySortedContext.js","System/Collections/Sorting/KeySortedContext.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","define","require","exports","Values","SortContext_1","Functions_1","KeySortedContext","_super","next","_keySelector","order","comparer","compare","call","a","_","ks","Identity","_next","_order","defineProperty","value"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,IAEnFO,SAAQ,UAAW,UAAW,gBAAiB,gBAAiB,mBAAoB,SAAUC,EAASC,EAASC,EAAQC,EAAeC,GCCvI,YAQA,IAAAC,GAAA,SAAAC,GAGC,QAAAD,GACCE,EACUC,EACVC,EACAC,GADA,SAAAD,IAAAA,EAAA,GACA,SAAAC,IAAAA,EAAyBR,EAAOS,SAEhCL,EAAAM,KAAAvB,KAAMkB,EAAMG,EAAUD,GAJZpB,KAAAmB,aAAAA,EAgBZ,MApB2DpB,WAAAiB,EAAAC,GAW1DD,EAAAT,UAAAe,QAAA,SAAQE,EAAKtB,GAEZ,GAAIuB,GAAIzB,KAAM0B,EAAKD,EAAEN,YACrB,KAAIO,GAAMA,GAAIX,EAAAA,WAAUY,SAAU,MAAOV,GAAAV,UAAMe,QAAOC,KAAAvB,KAACwB,EAAGtB,EAE1D,IAAID,GAAIY,EAAOS,QAAaI,EAAGF,GAASE,EAAGxB,GAC3C,OAAM,IAAHD,GAAQwB,EAAEG,MAAcH,EAAEG,MAAMN,QAAQE,EAAGtB,GACvCuB,EAAEI,OAAO5B,GAElBe,GApB2DF,EAAAA,WAD3DN,QAAAsB,eAAAlB,EAAA,cAAAmB,OAAA,IDaInB,EAAAA,WAAkBI","file":"System/Collections/Sorting/KeySortedContext.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\ndefine([\"require\", \"exports\", '../../Compare', \"./SortContext\", \"../../Functions\"], function (require, exports, Values, SortContext_1, Functions_1) {\n    'use strict';\n    var KeySortedContext = (function (_super) {\n        __extends(KeySortedContext, _super);\n        function KeySortedContext(next, _keySelector, order, comparer) {\n            if (order === void 0) { order = 1; }\n            if (comparer === void 0) { comparer = Values.compare; }\n            _super.call(this, next, comparer, order);\n            this._keySelector = _keySelector;\n        }\n        KeySortedContext.prototype.compare = function (a, b) {\n            var _ = this, ks = _._keySelector;\n            if (!ks || ks == Functions_1.default.Identity)\n                return _super.prototype.compare.call(this, a, b);\n            var d = Values.compare(ks(a), ks(b));\n            if (d == 0 && _._next)\n                return _._next.compare(a, b);\n            return _._order * d;\n        };\n        return KeySortedContext;\n    }(SortContext_1.default));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = KeySortedContext;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"../../FunctionTypes.d.ts\"/>\r\n///<reference path=\"../../IComparer.d.ts\"/>\r\n///<reference path=\"../../Primitive.d.ts\"/>\r\n///<reference path=\"../Array/IArray.d.ts\"/>\r\n///<reference path=\"Order.d.ts\"/>\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport * as Values from '../../Compare'\r\nimport SortContext from \"./SortContext\";\r\nimport Functions from \"../../Functions\";\r\n\r\ntype Comparable = Primitive|IComparable<any>\r\n\r\nexport default\r\nclass KeySortedContext<T, TKey extends Comparable> extends SortContext<T>\r\n{\r\n\tconstructor(\r\n\t\tnext:IComparer<T>,\r\n\t\tprotected _keySelector:Selector<T,TKey>,\r\n\t\torder:Order = Order.Ascending,\r\n\t\tcomparer:Comparison<T> = Values.compare)\r\n\t{\r\n\t\tsuper(next, comparer, order);\r\n\t}\r\n\r\n\tcompare(a:T, b:T):number\r\n\t{\r\n\t\tvar _ = this, ks = _._keySelector;\r\n\t\tif(!ks || ks==Functions.Identity) return super.compare(a, b);\r\n\t\t// We force <any> here since it can be a Primitive or IComparable<any>\r\n\t\tvar d = Values.compare(<any>ks(a), <any>ks(b));\r\n\t\tif(d==0 && _._next) return _._next.compare(a, b);\r\n\t\treturn _._order*d;\r\n\t}\r\n}\r\n"]}