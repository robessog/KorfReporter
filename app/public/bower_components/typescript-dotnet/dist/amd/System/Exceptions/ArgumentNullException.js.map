{"version":3,"sources":["System/Exceptions/ArgumentNullException.js","System/Exceptions/ArgumentNullException.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","define","require","exports","ArgumentException_1","NAME","ArgumentNullException","_super","paramName","message","innerException","call","getName","defineProperty","value"],"mappings":";;;;;AAKA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,IAEnFO,SAAQ,UAAW,UAAW,uBAAwB,SAAUC,EAASC,EAASC,GCJlF,YAKA,IAAMC,GAAc,wBAEpBC,EAAA,SAAAC,GAGC,QAAAD,GACCE,EACAC,EACAC,GADA,SAAAD,IAAAA,EAAA,IACA,SAAAC,IAAAA,EAAA,MAEAH,EAAAI,KAAApB,KAAMiB,EAAWC,EAASC,GAQ5B,MAfoCpB,WAAAgB,EAAAC,GAUzBD,EAAAR,UAAAc,QAAV,WAEC,MAAOP,IAGTC,GAfoCF,EAAAA,WADpCL,QAAAc,eAAAV,EAAA,cAAAW,OAAA,IDaIX,EAAAA,WAAkBG","file":"System/Exceptions/ArgumentNullException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\ndefine([\"require\", \"exports\", './ArgumentException'], function (require, exports, ArgumentException_1) {\n    'use strict';\n    var NAME = 'ArgumentNullException';\n    var ArgumentNullException = (function (_super) {\n        __extends(ArgumentNullException, _super);\n        function ArgumentNullException(paramName, message, innerException) {\n            if (message === void 0) { message = ''; }\n            if (innerException === void 0) { innerException = null; }\n            _super.call(this, paramName, message, innerException);\n        }\n        ArgumentNullException.prototype.getName = function () {\n            return NAME;\n        };\n        return ArgumentNullException;\n    }(ArgumentException_1.default));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ArgumentNullException;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport ArgumentException from './ArgumentException';\r\n\r\n\r\nconst NAME:string = 'ArgumentNullException';\r\n\r\nexport default\r\nclass ArgumentNullException extends ArgumentException\r\n{\r\n\tconstructor(\r\n\t\tparamName:string,\r\n\t\tmessage:string = '',\r\n\t\tinnerException:Error = null)\r\n\t{\r\n\t\tsuper(paramName, message, innerException);\r\n\t}\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n"]}