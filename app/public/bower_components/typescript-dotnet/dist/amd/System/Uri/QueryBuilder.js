/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(t,e){function r(){this.constructor=t}for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)};define(["require","exports","../Types","./QueryParams","../Collections/Dictionaries/OrderedStringKeyDictionary","../Collections/Enumeration/Enumerator"],function(t,e,r,i,n,o){"use strict";var s=function(t){function e(e,r){void 0===r&&(r=!0),t.call(this),this.importQuery(e,r)}return __extends(e,t),e.init=function(t,r){return void 0===r&&(r=!0),new e(t,r)},e.prototype.importQuery=function(t,e){return void 0===e&&(e=!0),r["default"].isString(t)?this.importFromString(t,e):Array.isArray(t)||o.isEnumerable(t)?this.importPairs(t):this.importMap(t),this},e.prototype.importFromString=function(t,e,r){void 0===e&&(e=!0),void 0===r&&(r=!0);var n=this;return i.parse(t,function(t,e){if(n.containsKey(t)){var r=n.getValue(t);Array.isArray(r)?r.push(e):n.setValue(t,[r,e])}else n.setValue(t,e)},e,r),this},e.prototype.encode=function(t){return i.encode(this,t)},e.prototype.toString=function(){return this.encode()},e}(n["default"]);Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=s});
//# sourceMappingURL=QueryBuilder.js.map
