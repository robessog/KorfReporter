{"version":3,"sources":["System/Disposable/ObjectDisposedException.ts","System/Disposable/ObjectDisposedException.js"],"names":[],"mappings":";;;;;AAOA;;;;;;;;;;AAGA,IAAA,8BAAA,QAAsC,yCAAtC,CAAA;AAGA,IAAM,OAAc,yBAAd;;IAEN;;;AAQC,aARD,uBAQC,CACC,UADD,EAGgC;YAD/B,gEAAiB,oBACc;YAA/B,uEAA2B,oBAAI;;8BAXjC,yBAWiC;;sEAXjC,oCAaQ,SAAS,gBAAgB,UAAC,CAAD,EAAE;AAChC,cAAE,UAAF,GAAe,UAAf,CADgC;SAAF,GAFA;KAHhC;;iBARD;;kCAmBkB;AAEhB,mBAAO,IAAP,CAFgB;;;;mCAKT;AAEP,gBAAI,IAAI,IAAJ;gBAAU,QAAQ,EAAE,UAAF,CAFf;AAGP,oBAAQ,QAAS,MAAM,KAAN,GAAc,IAAd,GAAsB,EAA/B,CAHD;AAKP,mBAAO,MAAM,EAAE,IAAF,GAAS,IAAf,GAAsB,KAAtB,GAA8B,EAAE,OAAF,GAAY,GAA1C,CALA;;;;wCASP,YACA,YACA,SAAe;AAEf,gBAAG,WAAW,WAAX,EACF,MAAM,IAAI,uBAAJ,CAA4B,UAA5B,EAAwC,OAAxC,CAAN,CADD;;;;WArCF;EAEQ,4BAAA,OAAA;;AAFR,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACaA,QAAQ,OAAR,GAAkB,uBAAlB","file":"System/Disposable/ObjectDisposedException.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\n///<reference path=\"IDisposableAware.d.ts\"/>\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport Exception from '../Exception';\r\nimport InvalidOperationException from '../Exceptions/InvalidOperationException';\r\n\r\n\r\nconst NAME:string = 'ObjectDisposedException';\r\n\r\nexport default\r\nclass ObjectDisposedException\r\nextends InvalidOperationException\r\n{\r\n\r\n\tobjectName:string;\r\n\r\n\t// For simplicity and consistency, lets stick with 1 signature.\r\n\tconstructor(\r\n\t\tobjectName:string,\r\n\t\tmessage:string = null,\r\n\t\tinnerException:Exception = null)\r\n\t{\r\n\t\tsuper(message, innerException, (_)=>{\r\n\t\t\t_.objectName = objectName;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n\ttoString():string\r\n\t{\r\n\t\tvar _ = this, oName = _.objectName;\r\n\t\toName = oName ? ('{' + oName + '} ') : '';\r\n\r\n\t\treturn '[' + _.name + ': ' + oName + _.message + ']';\r\n\t}\r\n\r\n\tstatic throwIfDisposed(\r\n\t\tdisposable:IDisposableAware,\r\n\t\tobjectName?:string,\r\n\t\tmessage?:string):void\r\n\t{\r\n\t\tif(disposable.wasDisposed)\r\n\t\t\tthrow new ObjectDisposedException(objectName, message);\r\n\t}\r\n\r\n}\r\n","/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\n'use strict';\nconst InvalidOperationException_1 = require('../Exceptions/InvalidOperationException');\nconst NAME = 'ObjectDisposedException';\nclass ObjectDisposedException extends InvalidOperationException_1.default {\n    constructor(objectName, message = null, innerException = null) {\n        super(message, innerException, (_) => {\n            _.objectName = objectName;\n        });\n    }\n    getName() {\n        return NAME;\n    }\n    toString() {\n        var _ = this, oName = _.objectName;\n        oName = oName ? ('{' + oName + '} ') : '';\n        return '[' + _.name + ': ' + oName + _.message + ']';\n    }\n    static throwIfDisposed(disposable, objectName, message) {\n        if (disposable.wasDisposed)\n            throw new ObjectDisposedException(objectName, message);\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ObjectDisposedException;\n"]}