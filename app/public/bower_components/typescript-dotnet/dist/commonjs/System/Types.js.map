{"version":3,"sources":["System/Types.ts","System/Types.js"],"names":[],"mappings":"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","file":"System/Types.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"Primitive.d.ts\"/>\r\n///<reference path=\"Collections/Array/IArray.d.ts\"/>\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\n\r\nconst\r\n\tVOID0:any = void(0),\r\n\t_BOOLEAN:string = typeof true,\r\n\t_NUMBER:string  = typeof 0,\r\n\t_STRING:string  = typeof \"\",\r\n\t_OBJECT:string  = typeof {},\r\n\t_UNDEFINED:string = typeof VOID0,\r\n\t_FUNCTION:string = typeof function() {};\r\n\r\n// Only used for primitives.\r\nvar typeInfoRegistry:{[key:string]:TypeInfo} = {};\r\n\r\n/**\r\n * Exposes easy access to type information including inquiring about members.\r\n */\r\nexport class TypeInfo\r\n{\r\n\t// Not retained for primitives. Since they have no members.\r\n\tprivate target:any;\r\n\r\n\ttype:string;\r\n\r\n\tisBoolean:boolean;\r\n\tisNumber:boolean;\r\n\tisFinite:boolean;\r\n\tisValidNumber:boolean;\r\n\tisString:boolean;\r\n\tisTrueNaN:boolean;\r\n\tisObject:boolean;\r\n\tisFunction:boolean;\r\n\tisUndefined:boolean;\r\n\tisNull:boolean;\r\n\tisNullOrUndefined:boolean;\r\n\tisPrimitive:boolean;\r\n\r\n\tconstructor(target:any)\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.isBoolean = false;\r\n\t\t_.isNumber = false;\r\n\t\t_.isString = false;\r\n\t\t_.isTrueNaN = false;\r\n\t\t_.isObject = false;\r\n\t\t_.isFunction = false;\r\n\t\t_.isUndefined = false;\r\n\t\t_.isNull = false;\r\n\t\t_.isPrimitive = false;\r\n\r\n\t\tswitch(_.type = typeof target)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\t\t_.isBoolean = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _NUMBER:\r\n\t\t\t\t_.isNumber = true;\r\n\t\t\t\t_.isTrueNaN = isNaN(target);\r\n\t\t\t\t_.isFinite = isFinite(target);\r\n\t\t\t\t_.isValidNumber = !_.isTrueNaN;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _STRING:\r\n\t\t\t\t_.isString = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\t_.target = target;\r\n\t\t\t\tif(target===null)\r\n\t\t\t\t{\r\n\t\t\t\t\t_.isNull = true;\r\n\t\t\t\t\t_.isNullOrUndefined = true;\r\n\t\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_.isObject = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\t_.target = target;\r\n\t\t\t\t_.isString = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\t_.isUndefined = true;\r\n\t\t\t\t_.isNullOrUndefined = true;\r\n\t\t\t\t_.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Fatal type failure.  Unknown type: \" + _.type;\r\n\t\t}\r\n\r\n\t\tObject.freeze(_);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any member or non-member,\r\n\t * where non-members are of type undefined.\r\n\t * @param name\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tmember(name:string):TypeInfo\r\n\t{\r\n\t\tvar t = this.target;\r\n\t\treturn TypeInfo.getFor(\r\n\t\t\tt && (name)in(t)\r\n\t\t\t\t? t[name]\r\n\t\t\t\t: undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any target object.\r\n\t * If the target object is of a primitive type, it returns the TypeInfo instance assigned to that type.\r\n\t * @param target\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tstatic getFor(target:any):TypeInfo\r\n\t{\r\n\t\tvar type:string = typeof target;\r\n\t\tswitch(type)\r\n\t\t{\r\n\t\t\tcase _OBJECT:\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\treturn new TypeInfo(target);\r\n\t\t}\r\n\t\tvar info = typeInfoRegistry[type];\r\n\t\tif(!info) typeInfoRegistry[type] = info = new TypeInfo(target);\r\n\t\treturn info;\r\n\t}\r\n\r\n}\r\n\r\nmodule Type\r\n{\r\n\t/**\r\n\t * typeof true\r\n\t * @type {string}\r\n\t */\r\n\texport const BOOLEAN:string = _BOOLEAN;\r\n\r\n\t/**\r\n\t * typeof 0\r\n\t * @type {string}\r\n\t */\r\n\texport const NUMBER:string = _NUMBER;\r\n\r\n\t/**\r\n\t * typeof \"\"\r\n\t * @type {string}\r\n\t */\r\n\texport const STRING:string = _STRING;\r\n\r\n\t/**\r\n\t * typeof {}\r\n\t * @type {string}\r\n\t */\r\n\texport const OBJECT:string = _OBJECT;\r\n\r\n\r\n\t/**\r\n\t * typeof undefined\r\n\t * @type {string}\r\n\t */\r\n\texport const UNDEFINED:string = _UNDEFINED;\r\n\r\n\t/**\r\n\t * typeof function\r\n\t * @type {string}\r\n\t */\r\n\texport const FUNCTION:string = _FUNCTION;\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a boolean.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isBoolean(value:any):value is boolean\r\n\t{\r\n\t\treturn typeof value===_BOOLEAN;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a number.\r\n\t * @param value\r\n\t * @param allowNaN Default is true.\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isNumber(value:any, allowNaN?:boolean):value is number\r\n\t{\r\n\t\tif(allowNaN===VOID0) allowNaN = true;\r\n\t\treturn typeof value===_NUMBER && (allowNaN || !isNaN(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if is a number and is NaN.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isTrueNaN(value:any):value is number\r\n\t{\r\n\t\treturn typeof value===_NUMBER && isNaN(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a string.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isString(value:any):value is string\r\n\t{\r\n\t\treturn typeof value===_STRING;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value is a boolean, string, number, null, or undefined.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isPrimitive(value:any):value is Primitive\r\n\t{\r\n\t\tvar t = typeof value;\r\n\t\tswitch(t)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\tcase _STRING:\r\n\t\t\tcase _NUMBER:\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\treturn true;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\treturn value===null;\r\n\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a function.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isFunction(value:any):value is Function\r\n\t{\r\n\t\treturn typeof value===_FUNCTION;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is an object.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isObject(value:any):boolean\r\n\t{\r\n\t\treturn typeof value===_OBJECT;\r\n\t}\r\n\r\n\t/**\r\n\t * Guarantees a number value or NaN instead.\r\n\t * @param value\r\n\t * @returns {number}\r\n\t */\r\n\texport function numberOrNaN(value:any):number\r\n\t{\r\n\t\treturn isNaN(value) ? NaN : value;\r\n\t}\r\n\r\n\texport function of(target:any):TypeInfo\r\n\t{\r\n\t\treturn TypeInfo.getFor(target);\r\n\t}\r\n\r\n\texport function hasMember(value:any, property:string):boolean\r\n\t{\r\n\t\treturn value && !isPrimitive(value) && (property)in(value);\r\n\t}\r\n\r\n\texport function hasMemberOfType<T>(instance:any, property:string, type:string):instance is T\r\n\t{\r\n\t\treturn hasMember(instance, property) && typeof(instance[property])===type;\r\n\t}\r\n\r\n\texport function isArrayLike<T>(instance:any):instance is IArray<T>\r\n\t{\r\n\t\treturn instance instanceof Array || hasMember(instance, \"length\");\r\n\t}\r\n}\r\n\r\nObject.freeze(Type);\r\n\r\nexport default Type;\r\n","/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n'use strict';\nconst VOID0 = void (0), _BOOLEAN = typeof true, _NUMBER = typeof 0, _STRING = typeof \"\", _OBJECT = typeof {}, _UNDEFINED = typeof VOID0, _FUNCTION = typeof function () { };\nvar typeInfoRegistry = {};\nclass TypeInfo {\n    constructor(target) {\n        var _ = this;\n        _.isBoolean = false;\n        _.isNumber = false;\n        _.isString = false;\n        _.isTrueNaN = false;\n        _.isObject = false;\n        _.isFunction = false;\n        _.isUndefined = false;\n        _.isNull = false;\n        _.isPrimitive = false;\n        switch (_.type = typeof target) {\n            case _BOOLEAN:\n                _.isBoolean = true;\n                _.isPrimitive = true;\n                break;\n            case _NUMBER:\n                _.isNumber = true;\n                _.isTrueNaN = isNaN(target);\n                _.isFinite = isFinite(target);\n                _.isValidNumber = !_.isTrueNaN;\n                _.isPrimitive = true;\n                break;\n            case _STRING:\n                _.isString = true;\n                _.isPrimitive = true;\n                break;\n            case _OBJECT:\n                _.target = target;\n                if (target === null) {\n                    _.isNull = true;\n                    _.isNullOrUndefined = true;\n                    _.isPrimitive = true;\n                }\n                else {\n                    _.isObject = true;\n                }\n                break;\n            case _FUNCTION:\n                _.target = target;\n                _.isString = true;\n                break;\n            case _UNDEFINED:\n                _.isUndefined = true;\n                _.isNullOrUndefined = true;\n                _.isPrimitive = true;\n                break;\n            default:\n                throw \"Fatal type failure.  Unknown type: \" + _.type;\n        }\n        Object.freeze(_);\n    }\n    member(name) {\n        var t = this.target;\n        return TypeInfo.getFor(t && (name) in (t)\n            ? t[name]\n            : undefined);\n    }\n    static getFor(target) {\n        var type = typeof target;\n        switch (type) {\n            case _OBJECT:\n            case _FUNCTION:\n                return new TypeInfo(target);\n        }\n        var info = typeInfoRegistry[type];\n        if (!info)\n            typeInfoRegistry[type] = info = new TypeInfo(target);\n        return info;\n    }\n}\nexports.TypeInfo = TypeInfo;\nvar Type;\n(function (Type) {\n    Type.BOOLEAN = _BOOLEAN;\n    Type.NUMBER = _NUMBER;\n    Type.STRING = _STRING;\n    Type.OBJECT = _OBJECT;\n    Type.UNDEFINED = _UNDEFINED;\n    Type.FUNCTION = _FUNCTION;\n    function isBoolean(value) {\n        return typeof value === _BOOLEAN;\n    }\n    Type.isBoolean = isBoolean;\n    function isNumber(value, allowNaN) {\n        if (allowNaN === VOID0)\n            allowNaN = true;\n        return typeof value === _NUMBER && (allowNaN || !isNaN(value));\n    }\n    Type.isNumber = isNumber;\n    function isTrueNaN(value) {\n        return typeof value === _NUMBER && isNaN(value);\n    }\n    Type.isTrueNaN = isTrueNaN;\n    function isString(value) {\n        return typeof value === _STRING;\n    }\n    Type.isString = isString;\n    function isPrimitive(value) {\n        var t = typeof value;\n        switch (t) {\n            case _BOOLEAN:\n            case _STRING:\n            case _NUMBER:\n            case _UNDEFINED:\n                return true;\n            case _OBJECT:\n                return value === null;\n        }\n        return false;\n    }\n    Type.isPrimitive = isPrimitive;\n    function isFunction(value) {\n        return typeof value === _FUNCTION;\n    }\n    Type.isFunction = isFunction;\n    function isObject(value) {\n        return typeof value === _OBJECT;\n    }\n    Type.isObject = isObject;\n    function numberOrNaN(value) {\n        return isNaN(value) ? NaN : value;\n    }\n    Type.numberOrNaN = numberOrNaN;\n    function of(target) {\n        return TypeInfo.getFor(target);\n    }\n    Type.of = of;\n    function hasMember(value, property) {\n        return value && !isPrimitive(value) && (property) in (value);\n    }\n    Type.hasMember = hasMember;\n    function hasMemberOfType(instance, property, type) {\n        return hasMember(instance, property) && typeof (instance[property]) === type;\n    }\n    Type.hasMemberOfType = hasMemberOfType;\n    function isArrayLike(instance) {\n        return instance instanceof Array || hasMember(instance, \"length\");\n    }\n    Type.isArrayLike = isArrayLike;\n})(Type || (Type = {}));\nObject.freeze(Type);\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Type;\n"]}