{"version":3,"sources":["System/Exceptions/SystemException.ts","System/Exceptions/SystemException.js"],"names":[],"mappings":";;;;;AAMA;;;;;;;;;;AAEA,IAAA,cAAA,QAAsB,cAAtB,CAAA;AAGA,IAAM,OAAc,iBAAd;;IAEN;;;;;;;;;;;kCAakB;AAEhB,mBAAO,IAAP,CAFgB;;;;WAblB;EAC8B,YAAA,OAAA;;AAD9B,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACCA,QAAQ,OAAR,GAAkB,eAAlB","file":"System/Exceptions/SystemException.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/system.systemexception%28v=vs.110%29.aspx\r\n */\r\n\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport Exception from '../Exception';\r\n\r\n\r\nconst NAME:string = 'SystemException';\r\n\r\nexport default\r\nclass SystemException extends Exception\r\n{\r\n/*\r\n\tconstructor(\r\n\t\tmessage:string = null,\r\n\t\tinnerException:Error = null,\r\n\t\tbeforeSealing?:(ex:any)=>void)\r\n\t{\r\n\t\tsuper(message, innerException, beforeSealing);\r\n\t}\r\n*/\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n}\r\n","/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/system.systemexception%28v=vs.110%29.aspx\n */\n'use strict';\nconst Exception_1 = require('../Exception');\nconst NAME = 'SystemException';\nclass SystemException extends Exception_1.default {\n    getName() {\n        return NAME;\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SystemException;\n"]}