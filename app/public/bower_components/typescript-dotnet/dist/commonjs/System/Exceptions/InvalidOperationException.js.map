{"version":3,"sources":["System/Exceptions/InvalidOperationException.ts","System/Exceptions/InvalidOperationException.js"],"names":[],"mappings":";;;;;AAMA;;;;;;;;;;AAEA,IAAA,oBAAA,QAA4B,mBAA5B,CAAA;AAGA,IAAM,OAAc,2BAAd;;IAEN;;;;;;;;;;;kCAGkB;AAEhB,mBAAO,IAAP,CAFgB;;;;WAHlB;EACwC,kBAAA,OAAA;;AADxC,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACCA,QAAQ,OAAR,GAAkB,yBAAlB","file":"System/Exceptions/InvalidOperationException.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport SystemException from './SystemException';\r\n\r\n\r\nconst NAME:string = 'InvalidOperationException';\r\n\r\nexport default\r\nclass InvalidOperationException extends SystemException {\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n","/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\n'use strict';\nconst SystemException_1 = require('./SystemException');\nconst NAME = 'InvalidOperationException';\nclass InvalidOperationException extends SystemException_1.default {\n    getName() {\n        return NAME;\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = InvalidOperationException;\n"]}