{"version":3,"sources":["System/Exceptions/ArgumentOutOfRangeException.js","System/Exceptions/ArgumentOutOfRangeException.ts"],"names":[],"mappings":";;;;;AAKA;;;;;;;;;;ACGA,IAAA,sBAAA,QAA8B,qBAA9B,CAAA;AACA;AAGA,IAAM,OAAc,6BAAd;;IAEN;;;AAKC,aALD,2BAKC,CACC,SADD,EAEC,WAFD,EAIgC;YAD/B,gEAAiB,mBACc;YAA/B,uEAA2B,oBAAI;;8BATjC,6BASiC;;sEATjC,wCAWQ,WAAW,SAAS,gBAAgB,UAAC,CAAD,EAAE;AAC3C,cAAE,WAAF,GAAgB,WAAhB,CAD2C;SAAF,GAFX;KAJhC;;iBALD;;kCAiBkB;AAEhB,mBAAO,IAAP,CAFgB;;;;WAjBlB;EAC0C,oBAAA,OAAA;;AAD1C,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ADMA,QAAQ,OAAR,GAAkB,2BAAlB","file":"System/Exceptions/ArgumentOutOfRangeException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\n\"use strict\";\nconst ArgumentException_1 = require('./ArgumentException');\n'use strict';\nconst NAME = 'ArgumentOutOfRangeException';\nclass ArgumentOutOfRangeException extends ArgumentException_1.default {\n    constructor(paramName, actualValue, message = ' ', innerException = null) {\n        super(paramName, message, innerException, (_) => {\n            _.actualValue = actualValue;\n        });\n    }\n    getName() {\n        return NAME;\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ArgumentOutOfRangeException;\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\nimport Type from '../Types';\r\nimport Exception from '../Exception';\r\nimport ArgumentException from './ArgumentException';\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\n\r\nconst NAME:string = 'ArgumentOutOfRangeException';\r\n\r\nexport default\r\nclass ArgumentOutOfRangeException extends ArgumentException\r\n{\r\n\tactualValue:string|number|boolean;\r\n\r\n\tconstructor(\r\n\t\tparamName:string,\r\n\t\tactualValue:string|number|boolean,\r\n\t\tmessage:string = ' ',\r\n\t\tinnerException:Exception = null)\r\n\t{\r\n\t\tsuper(paramName, message, innerException, (_)=>{\r\n\t\t\t_.actualValue = actualValue;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n}\r\n"]}