{"version":3,"sources":["System/Compare.js","System/Compare.ts"],"names":[],"mappings":";;;;AAIA;;ACIA,IAAA,UAAA,QAAiB,SAAjB,CAAA;AACA,IAAO,YAAY,QAAA,OAAA,CAAK,SAAL;AAEnB,IAAM,QAAY,KAAK,CAAL;AAIlB,SAAA,QAAA,CAAyB,CAAzB,EAAgC,CAAhC,EAA4D;QAArB,+DAAiB,oBAAI;;AAE3D,WAAO,MAAI,CAAJ,IAAS,CAAC,MAAD,IAAW,KAAG,CAAH,IAAQ,UAAU,CAAV,KAAgB,UAAU,CAAV,CAAhB,CAFwB;CAA5D;AAAgB,QAAA,QAAA,GAAQ,QAAR;AAKhB,IAAM,aAAa,WAAb;AAIN,SAAA,OAAA,CAAwB,CAAxB,EAA+B,CAA/B,EAA2D;QAArB,+DAAiB,oBAAI;;AAG1D,QAAG,SAAS,CAAT,EAAY,CAAZ,EAAe,MAAf,CAAH,EACC,OAAO,CAAP,CADD;AAGA,QAAG,KAAK,QAAA,OAAA,CAAK,SAAL,CAAe,CAAf,EAAkB,UAAlB,CAAL,EACF,OAAO,EAAE,SAAF,CAAY,CAAZ,CAAP,CADD,KAEK,IAAG,KAAK,QAAA,OAAA,CAAK,SAAL,CAAe,CAAf,EAAkB,UAAlB,CAAL,EACP,OAAO,CAAC,EAAE,SAAF,CAAY,CAAZ,CAAD,CADH;AAKL,QAAG,IAAE,CAAF,IAAO,WAAW,MAAI,CAAJ,IAAS,KAAG,CAAH,IAAQ,MAAI,IAAJ,IAAY,MAAI,KAAJ,CAAxC,EACT,OAAO,CAAP,CADD;AAGA,QAAG,IAAE,CAAF,IAAO,WAAW,MAAI,CAAJ,IAAS,KAAG,CAAH,IAAQ,MAAI,IAAJ,IAAY,MAAI,KAAJ,CAAxC,EACT,OAAO,CAAA,CAAA,CADR;AAGA,WAAO,GAAP,CAnB0D;CAA3D;AAAgB,QAAA,OAAA,GAAO,OAAP","file":"System/Compare.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n\"use strict\";\nconst Types_1 = require('./Types');\nvar isTrueNaN = Types_1.default.isTrueNaN;\nconst VOID0 = void 0;\nfunction areEqual(a, b, strict = true) {\n    return a === b || !strict && a == b || isTrueNaN(a) && isTrueNaN(b);\n}\nexports.areEqual = areEqual;\nconst COMPARE_TO = \"compareTo\";\nfunction compare(a, b, strict = true) {\n    if (areEqual(a, b, strict))\n        return 0;\n    if (a && Types_1.default.hasMember(a, COMPARE_TO))\n        return a.compareTo(b);\n    else if (b && Types_1.default.hasMember(b, COMPARE_TO))\n        return -b.compareTo(a);\n    if (a > b || strict && (a === 0 && b == 0 || a === null && b === VOID0))\n        return 1;\n    if (b > a || strict && (b === 0 && a == 0 || b === null && a === VOID0))\n        return -1;\n    return NaN;\n}\nexports.compare = compare;\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"IComparable.d.ts\"/>\r\n///<reference path=\"Primitive.d.ts\"/>\r\n///<reference path=\"CompareResult.d.ts\"/>\r\nimport Type from './Types';\r\nimport isTrueNaN = Type.isTrueNaN;\r\n\r\nconst VOID0:any = void 0;\r\n\r\n\r\n// Used for special equals cases like NaN.\r\nexport function areEqual(a:any, b:any, strict:boolean = true):boolean\r\n{\r\n\treturn a===b || !strict && a==b || isTrueNaN(a) && isTrueNaN(b);\r\n}\r\n\r\nconst COMPARE_TO = \"compareTo\";\r\n\r\nexport function compare<T>(a:IComparable<T>, b:IComparable<T>):number;\r\nexport function compare<T extends Primitive>(a:T, b:T, strict?:boolean):CompareResult;\r\nexport function compare(a:any, b:any, strict:boolean = true):CompareResult\r\n{\r\n\r\n\tif(areEqual(a, b, strict))\r\n\t\treturn CompareResult.Equal;\r\n\r\n\tif(a && Type.hasMember(a, COMPARE_TO))\r\n\t\treturn a.compareTo(b);\r\n\telse if(b && Type.hasMember(b, COMPARE_TO))\r\n\t\treturn -b.compareTo(a);\r\n\r\n\t// Allow for special inequality..\r\n\r\n\tif(a>b || strict && (a===0 && b==0 || a===null && b===VOID0))\r\n\t\treturn CompareResult.Greater;\r\n\r\n\tif(b>a || strict && (b===0 && a==0 || b===null && a===VOID0))\r\n\t\treturn CompareResult.Less;\r\n\r\n\treturn NaN;\r\n}\r\n"]}