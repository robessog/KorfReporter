{"version":3,"sources":["System/Collections/Enumeration/ArrayEnumerator.ts","System/Collections/Enumeration/ArrayEnumerator.js"],"names":[],"mappings":";;;;AAMA;;;;;;;;AAEA,IAAA,oBAAA,QAA4B,mBAA5B,CAAA;AACA,IAAA,UAAA,QAAiB,aAAjB,CAAA;;IAEA;;;AAKC,aALD,eAKC,CAAY,cAAZ,EAAiE;YAAjC,8DAAe,iBAAkB;YAAf,6DAAc,iBAAC;;8BALlE,iBAKkE;;sEALlE,4BAQG,YAAA;AAEC,gBAAI,QAAQ,QAAA,OAAA,CAAK,UAAL,CAAgB,cAAhB,IAAkC,gBAAlC,GAAqD,cAArD,CAFb;AAGC,mBAAO,EAAC,QAAQ,KAAR,EAAe,SAAS,KAAT,EAAgB,QAAS,QAAQ,MAAM,MAAN,GAAe,CAAvB,EAA2B,MAAM,IAAN,EAA3E,CAHD;SAAA,GAH+D;KAAjE;;WALD;EACiC,kBAAA,OAAA;;AADjC,OAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA;ACKA,QAAQ,OAAR,GAAkB,eAAlB","file":"System/Collections/Enumeration/ArrayEnumerator.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"../Array/IArray.d.ts\"/>\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport IndexEnumerator from './IndexEnumerator';\r\nimport Type from '../../Types';\r\n\r\nexport default\r\nclass ArrayEnumerator<T> extends IndexEnumerator<T>\r\n{\r\n\tconstructor(arrayFactory:() => IArray<T>, start?:number, step?:number);\r\n\tconstructor(array:IArray<T>, start?:number, step?:number);\r\n\tconstructor(arrayOrFactory:any, start:number = 0, step:number = 1)\r\n\t{\r\n\t\tsuper(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tvar array = Type.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\r\n\t\t\t\treturn {source: array, pointer: start, length: (array ? array.length : 0), step: step};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\n","/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\n'use strict';\nconst IndexEnumerator_1 = require('./IndexEnumerator');\nconst Types_1 = require('../../Types');\nclass ArrayEnumerator extends IndexEnumerator_1.default {\n    constructor(arrayOrFactory, start = 0, step = 1) {\n        super(() => {\n            var array = Types_1.default.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\n            return { source: array, pointer: start, length: (array ? array.length : 0), step: step };\n        });\n    }\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ArrayEnumerator;\n"]}