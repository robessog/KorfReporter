/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(e,r){function t(){this.constructor=e}for(var o in r)r.hasOwnProperty(o)&&(e[o]=r[o]);e.prototype=null===r?Object.create(r):(t.prototype=r.prototype,new t)};!function(e){if("object"==typeof module&&"object"==typeof module.exports){var r=e(require,exports);void 0!==r&&(module.exports=r)}else"function"==typeof define&&define.amd&&define(["require","exports","./EnumeratorBase"],e)}(function(e,r){"use strict";var t=e("./EnumeratorBase"),o=function(e){function r(r){var t;e.call(this,function(){if(t=r(),t&&t.source){if(t.length&&0===t.step)throw new Error("Invalid IndexEnumerator step value (0).");var e=t.pointer;if(e){if(e!=Math.floor(e))throw new Error("Invalid IndexEnumerator pointer value ("+e+") has decimal.")}else t.pointer=0;t.pointer=e;var o=t.step;if(o){if(o!=Math.floor(o))throw new Error("Invalid IndexEnumerator step value ("+o+") has decimal.")}else t.step=1;t.step=o}},function(e){var r=t&&t.source?t.length:0;if(!r)return e.yieldBreak();var o=t.pointer;return t.pointer+=t.step,r>o&&o>=0?e.yieldReturn(t.source[o]):e.yieldBreak()},function(){t&&(t.source=null)})}return __extends(r,e),r}(t["default"]);Object.defineProperty(r,"__esModule",{value:!0}),r["default"]=o});
//# sourceMappingURL=IndexEnumerator.js.map
