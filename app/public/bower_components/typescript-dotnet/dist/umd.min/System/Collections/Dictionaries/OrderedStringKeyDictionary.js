/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)};!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../Array/Utility","./StringKeyDictionary","../../Exceptions/ArgumentOutOfRangeException"],e)}(function(e,t){"use strict";var r=e("../Array/Utility"),n=e("./StringKeyDictionary"),o=e("../../Exceptions/ArgumentOutOfRangeException"),i=void 0,u=function(e){function t(){e.call(this),this._order=[]}return __extends(t,e),t.prototype.indexOfKey=function(e){return this._order.indexOf(e,0)},t.prototype.getValueByIndex=function(e){return this.getValue(this._order[e])},t.prototype.setValue=function(t,n,o){var u=this,s=-1!=u.indexOfKey(t);return s||n===i&&!o?s&&n===i&&!o&&r.remove(u._order,t):u._order.push(t),e.prototype.setValue.call(this,t,n)},t.prototype.setByIndex=function(e,t){var r=this,n=r._order;if(0>e)throw new o["default"]("index",e,"Is less than zero.");if(e>=n.length)throw new o["default"]("index",e,"Is greater than the count.");return r.setValue(n[e],t)},t.prototype.importValues=function(e){var t=this;return t.handleUpdate(function(){for(var r=!1,n=0;n<e.length;n++)t.setByIndex(n,e[n])&&(r=!0);return r})},t.prototype.setValues=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return this.importValues(e)},t.prototype.removeByIndex=function(e){return this.setByIndex(e,void 0)},t.prototype.getKeys=function(){var e=this;return e._order.filter(function(t){return e.containsKey(t)})},t}(n["default"]);Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=u});
//# sourceMappingURL=OrderedStringKeyDictionary.js.map
