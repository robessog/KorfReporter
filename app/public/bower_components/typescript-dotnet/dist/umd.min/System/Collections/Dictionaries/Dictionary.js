/*!
 * @author electricessence / https://github.com/electricessence/
 * Original: http://linqjs.codeplex.com/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
var __extends=this&&this.__extends||function(e,t){function r(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)};!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../../Compare","../../Types","../../Functions","./DictionaryBase","../Enumeration/EnumeratorBase","../LinkedNodeList"],e)}(function(e,t){"use strict";function r(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function n(e){return null===e?"null":e===l?"undefined":typeof e.toString===i["default"].FUNCTION?e.toString():Object.prototype.toString.call(e)}var o=e("../../Compare"),i=e("../../Types"),u=e("../../Functions"),a=e("./DictionaryBase"),s=e("../Enumeration/EnumeratorBase"),c=e("../LinkedNodeList"),l=void 0,f=function(){function e(e,t,r,n){this.key=e,this.value=t,this.previous=r,this.next=n}return e}(),p=function(e){function t(t){void 0===t&&(t=u["default"].Identity),e.call(this),this._compareSelector=t,this._count=0,this._entries=new c["default"],this._buckets={}}return __extends(t,e),t.prototype.setKV=function(e,t,i){var u,a=this,s=a._buckets,c=a._entries,p=a._compareSelector,d=p(e),y=n(d);if(r(s,y)){for(var h=o.areEqual,v=s[y],_=0;_<v.length;_++){var m=v[_];if(p(m.key)===d){if(!i)throw new Error("Key already exists.");var k=!h(m.value,t);return k&&(t===l?(c.removeNode(m),v.splice(_,1),v.length||delete s[y],--a._count):(u=new f(e,t),c.replace(m,u),v[_]=u),a._onValueUpdate(e,t,m.value)),k}}v.push(u=u||new f(e,t))}else{if(t===l){if(i)return!1;throw new Error("Cannot add 'undefined' value.")}s[y]=[u=new f(e,t)]}return++a._count,c.addNode(u),a._onValueUpdate(e,t,void 0),!0},t.prototype.addByKeyValue=function(e,t){this.setKV(e,t,!1)},t.prototype.getValue=function(e){var t=this._buckets,o=this._compareSelector,i=o(e),u=n(i);if(r(t,u))for(var a=t[u],s=0,c=a;s<c.length;s++){var l=c[s];if(o(l.key)===i)return l.value}},t.prototype.setValue=function(e,t){return this.setKV(e,t,!0)},t.prototype.containsKey=function(e){var t=this,o=t._buckets,i=t._compareSelector,u=i(e),a=n(u);if(!r(o,a))return!1;for(var s=o[a],c=0,l=s.length;l>c;c++)if(i(s[c].key)===u)return!0;return!1},t.prototype.clear=function(){var t=this,r=t._buckets,n=e.prototype.clear.call(this);t._count=0;for(var o in r)r.hasOwnProperty(o)&&delete r[o];return t._entries.clear(),n},t.prototype.getCount=function(){return this._count},t.prototype.getEnumerator=function(){var e,t=this;return new s["default"](function(){e=t._entries.first},function(t){if(null!=e){var r={key:e.key,value:e.value};return e=e.next,t.yieldReturn(r)}return t.yieldBreak()})},t.prototype.getKeys=function(){for(var e=this,t=[],r=e._entries.first;r;)t.push(r.key),r=r.next;return t},t.prototype.getValues=function(){for(var e=this,t=[],r=e._entries.first;r;)t.push(r.value),r=r.next;return t},t}(a["default"]);Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=p});
//# sourceMappingURL=Dictionary.js.map
