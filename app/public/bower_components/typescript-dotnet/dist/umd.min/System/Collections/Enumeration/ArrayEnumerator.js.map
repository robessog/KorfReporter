{"version":3,"sources":["System/Collections/Enumeration/ArrayEnumerator.js","System/Collections/Enumeration/ArrayEnumerator.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","factory","module","exports","v","require","undefined","define","amd","IndexEnumerator_1","Types_1","ArrayEnumerator","_super","arrayOrFactory","start","step","call","array","isFunction","source","pointer","length","defineProperty","value"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,MAEnF,SAAWO,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,oBAAqB,eAAgBN,IAExE,SAAUI,EAASF,GCVtB,YAEA,IAAAM,GAAAJ,EAA4B,qBAC5BK,EAAAL,EAAiB,eAEjBM,EAAA,SAAAC,GAKC,QAAAD,GAAYE,EAAoBC,EAAkBC,GAAlB,SAAAD,IAAAA,EAAA,GAAkB,SAAAC,IAAAA,EAAA,GAEjDH,EAAAI,KAAAzB,KACC,WAEC,GAAI0B,GAAQP,EAAAA,WAAKQ,WAAWL,GAAkBA,IAAmBA,CACjE,QAAQM,OAAQF,EAAOG,QAASN,EAAOO,OAASJ,EAAQA,EAAMI,OAAS,EAAIN,KAAMA,KAIrF,MAdiCzB,WAAAqB,EAAAC,GAcjCD,GAdiCF,EAAAA,WADjCV,QAAAuB,eAAAnB,EAAA,cAAAoB,OAAA,IDsBIpB,EAAAA,WAAkBQ","file":"System/Collections/Enumeration/ArrayEnumerator.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", './IndexEnumerator', '../../Types'], factory);\n    }\n})(function (require, exports) {\n    'use strict';\n    var IndexEnumerator_1 = require('./IndexEnumerator');\n    var Types_1 = require('../../Types');\n    var ArrayEnumerator = (function (_super) {\n        __extends(ArrayEnumerator, _super);\n        function ArrayEnumerator(arrayOrFactory, start, step) {\n            if (start === void 0) { start = 0; }\n            if (step === void 0) { step = 1; }\n            _super.call(this, function () {\n                var array = Types_1.default.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\n                return { source: array, pointer: start, length: (array ? array.length : 0), step: step };\n            });\n        }\n        return ArrayEnumerator;\n    }(IndexEnumerator_1.default));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ArrayEnumerator;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"../Array/IArray.d.ts\"/>\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport IndexEnumerator from './IndexEnumerator';\r\nimport Type from '../../Types';\r\n\r\nexport default\r\nclass ArrayEnumerator<T> extends IndexEnumerator<T>\r\n{\r\n\tconstructor(arrayFactory:() => IArray<T>, start?:number, step?:number);\r\n\tconstructor(array:IArray<T>, start?:number, step?:number);\r\n\tconstructor(arrayOrFactory:any, start:number = 0, step:number = 1)\r\n\t{\r\n\t\tsuper(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tvar array = Type.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\r\n\t\t\t\treturn {source: array, pointer: start, length: (array ? array.length : 0), step: step};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\n"]}