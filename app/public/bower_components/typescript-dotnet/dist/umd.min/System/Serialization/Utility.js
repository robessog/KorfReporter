/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../Types","../Exceptions/InvalidOperationException"],e)}(function(e,t){"use strict";function r(e,t){var r=e;switch(typeof r){case n["default"].UNDEFINED:case n["default"].STRING:return r;case n["default"].BOOLEAN:return r?f:l;case n["default"].NUMBER:return s+r;default:if(null===r)return r;if(i(r))return r.serialize();if(arguments.length>1)return t;var a=new u["default"]("Attempting to serialize unidentifiable type.");throw a.data.value=r,a}}function i(e){return n["default"].hasMemberOfType(e,"serialize",n["default"].FUNCTION)}function a(e,t,r){if(e)switch(t&&(e=e.toLowerCase()),e){case"null":return null;case n["default"].UNDEFINED:return;case f:return!0;case l:return!1;default:var i=e.replace(/^\s+|,|\s+$/g,s);if(i)if(/^\d+$/g.test(i)){var a=parseInt(i);if(!isNaN(a))return a}else{var u=parseFloat(e);if(!isNaN(u))return u}r&&(e=r(e))}return e}var n=e("../Types"),u=e("../Exceptions/InvalidOperationException"),s="",f="true",l="false";t.toString=r,t.isSerializable=i,t.toPrimitive=a});
//# sourceMappingURL=Utility.js.map
