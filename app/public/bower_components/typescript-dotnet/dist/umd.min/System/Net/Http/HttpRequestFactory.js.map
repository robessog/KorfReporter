{"version":3,"sources":["System/Net/Http/HttpRequestFactory.js","System/Net/Http/HttpRequestFactory.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","factory","module","exports","v","require","undefined","define","amd","ArgumentNullException_1","Uri_1","DisposableBase_1","HttpMethod_1","HttpRequestFactory","_super","_http","uriDefaults","call","_disposableObjectName","_uriDefaults","from","_onDispose","uri","_","throwIfDisposed","u","equals","params","updateQuery","request","method","data","get","GET","put","PUT","post","POST","DELETE","defineProperty","value"],"mappings":";;;;AAIA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,MAEnF,SAAWO,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,yCAA0C,gBAAiB,kCAAmC,gBAAiBN,IAElJ,SAAUI,EAASF,GCTtB,YAEA,IAAAM,GAAAJ,EAAkC,0CAClCK,EAAAL,EAAgB,iBAChBM,EAAAN,EAA2B,mCAE3BO,EAAAP,EAAqC,gBAKrCQ,EAAA,SAAAC,GAKC,QAAAD,GACSE,EACRC,GAMA,GAJAF,EAAAG,KAAA1B,MAHQA,KAAAwB,MAAAA,EAKRxB,KAAK2B,sBAAwB,sBAEzBH,EACH,KAAM,IAAIN,GAAAA,WAAsB,QAEjClB,MAAK4B,aAAeT,EAAAA,WAAIU,KAAKJ,GA2D/B,MA3EgD1B,WAAAuB,EAAAC,GAmBrCD,EAAAf,UAAAuB,WAAV,WAEC9B,KAAKwB,MAAQ,KACbxB,KAAK4B,aAAe,MAGrBN,EAAAf,UAAAwB,IAAA,SAAIA,GAGH,GAAIC,GAAIhC,IACRgC,GAAEC,iBACF,IAAIC,GAAIf,EAAAA,WAAIU,KAAKE,EAAKC,EAAEJ,aACxB,OAAOI,GAAEJ,aAAaO,OAAOD,GAC1BF,EACA,GAAIV,GAAmBU,EAAER,MAAOU,IAGpCZ,EAAAf,UAAA6B,OAAA,SAAOA,GAEN,GAAIJ,GAAIhC,IAER,OADAgC,GAAEC,kBACKD,EAAED,IAAIC,EAAEJ,aAAaS,YAAYD,KAGzCd,EAAAf,UAAA+B,QAAA,SAAiBC,EAAwBC,GAExC,GAAIR,GAAIhC,IAER,OADAgC,GAAEC,kBACKD,EAAER,MAAMc,SACdC,OAAQA,EACRR,IAAKC,EAAEJ,aACPY,KAAMA,KAKRlB,EAAAf,UAAAkC,IAAA,WAEC,MAAOzC,MAAKsC,QAAiBjB,EAAAqB,MAG9BpB,EAAAf,UAAAoC,IAAA,WAEC,MAAO3C,MAAKsC,QAAiBjB,EAAAuB,MAG9BtB,EAAAf,UAAAsC,KAAA,SAAcL,GAEb,MAAOxC,MAAKsC,QAAiBjB,EAAAyB,KAAMN,IAGpClB,EAAAf,UAAA,UAAA,WAEC,MAAOP,MAAKsC,QAAiBjB,EAAA0B,SAG/BzB,GA3EgDF,EAAAA,WAAhDZ,QAAAwC,eAAApC,EAAA,cAAAqC,OAAA,IDuDIrC,EAAAA,WAAkBU","file":"System/Net/Http/HttpRequestFactory.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", \"../../Exceptions/ArgumentNullException\", \"../../Uri/Uri\", \"../../Disposable/DisposableBase\", \"./HttpMethod\"], factory);\n    }\n})(function (require, exports) {\n    'use strict';\n    var ArgumentNullException_1 = require(\"../../Exceptions/ArgumentNullException\");\n    var Uri_1 = require(\"../../Uri/Uri\");\n    var DisposableBase_1 = require(\"../../Disposable/DisposableBase\");\n    var HttpMethod_1 = require(\"./HttpMethod\");\n    var HttpRequestFactory = (function (_super) {\n        __extends(HttpRequestFactory, _super);\n        function HttpRequestFactory(_http, uriDefaults) {\n            _super.call(this);\n            this._http = _http;\n            this._disposableObjectName = 'HttpRequestFactory';\n            if (!_http)\n                throw new ArgumentNullException_1.default('_http');\n            this._uriDefaults = Uri_1.default.from(uriDefaults);\n        }\n        HttpRequestFactory.prototype._onDispose = function () {\n            this._http = null;\n            this._uriDefaults = null;\n        };\n        HttpRequestFactory.prototype.uri = function (uri) {\n            var _ = this;\n            _.throwIfDisposed();\n            var u = Uri_1.default.from(uri, _._uriDefaults);\n            return _._uriDefaults.equals(u)\n                ? _\n                : new HttpRequestFactory(_._http, u);\n        };\n        HttpRequestFactory.prototype.params = function (params) {\n            var _ = this;\n            _.throwIfDisposed();\n            return _.uri(_._uriDefaults.updateQuery(params));\n        };\n        HttpRequestFactory.prototype.request = function (method, data) {\n            var _ = this;\n            _.throwIfDisposed();\n            return _._http.request({\n                method: method,\n                uri: _._uriDefaults,\n                data: data\n            });\n        };\n        HttpRequestFactory.prototype.get = function () {\n            return this.request(HttpMethod_1.GET);\n        };\n        HttpRequestFactory.prototype.put = function () {\n            return this.request(HttpMethod_1.PUT);\n        };\n        HttpRequestFactory.prototype.post = function (data) {\n            return this.request(HttpMethod_1.POST, data);\n        };\n        HttpRequestFactory.prototype['delete'] = function () {\n            return this.request(HttpMethod_1.DELETE);\n        };\n        return HttpRequestFactory;\n    }(DisposableBase_1.default));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = HttpRequestFactory;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n///<reference path=\"IHttpRequestAdapter.d.ts\"/>\r\n///<reference path=\"HttpMethodValue.d.ts\"/>\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport ArgumentNullException from \"../../Exceptions/ArgumentNullException\";\r\nimport Uri from \"../../Uri/Uri\";\r\nimport DisposableBase from \"../../Disposable/DisposableBase\";\r\nimport QueryBuilder from \"../../Uri/QueryBuilder\";\r\nimport {GET, PUT, POST, DELETE} from \"./HttpMethod\";\r\n\r\n/**\r\n * This class exposes a factory for making requests to prepared uri and params.\r\n */\r\nexport default class HttpRequestFactory extends DisposableBase\r\n{\r\n\r\n\tprotected _uriDefaults:Uri;\r\n\r\n\tconstructor(\r\n\t\tprivate _http:IHttpRequestAdapter,\r\n\t\turiDefaults?:string|IUri)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._disposableObjectName = 'HttpRequestFactory';\r\n\r\n\t\tif(!_http)\r\n\t\t\tthrow new ArgumentNullException('_http');\r\n\r\n\t\tthis._uriDefaults = Uri.from(uriDefaults);\r\n\t}\r\n\r\n\tprotected _onDispose() {\r\n\t\t// super._onDispose(); // Not required for first level inheritance.\r\n\t\tthis._http = null;\r\n\t\tthis._uriDefaults = null;\r\n\t}\r\n\r\n\turi(uri:string|IUri):HttpRequestFactory\r\n\t{\r\n\r\n\t\tvar _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tvar u = Uri.from(uri, _._uriDefaults);\r\n\t\treturn _._uriDefaults.equals(u)\r\n\t\t\t? _\r\n\t\t\t: new HttpRequestFactory(_._http, u);\r\n\t}\r\n\r\n\tparams(params:QueryParamsConvertible):HttpRequestFactory\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\treturn _.uri(_._uriDefaults.updateQuery(params));\r\n\t}\r\n\r\n\trequest<TResult>(method:HttpMethodValue, data?:any):IPromise<TResult>\r\n\t{\r\n\t\tvar _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\treturn _._http.request({\r\n\t\t\tmethod: method,\r\n\t\t\turi: _._uriDefaults,\r\n\t\t\tdata: data\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tget<TResult>():IPromise<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(GET);\r\n\t}\r\n\r\n\tput<TResult>():IPromise<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(PUT);\r\n\t}\r\n\r\n\tpost<TResult>(data:any):IPromise<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(POST, data);\r\n\t}\r\n\r\n\t'delete'<TResult>():IPromise<TResult>\r\n\t{\r\n\t\treturn this.request<TResult>(DELETE);\r\n\t}\r\n\r\n}\r\n"]}