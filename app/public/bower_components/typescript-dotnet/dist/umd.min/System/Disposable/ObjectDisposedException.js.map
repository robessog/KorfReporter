{"version":3,"sources":["System/Disposable/ObjectDisposedException.js","System/Disposable/ObjectDisposedException.ts"],"names":["__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","factory","module","exports","v","require","undefined","define","amd","InvalidOperationException_1","NAME","ObjectDisposedException","_super","objectName","message","innerException","call","_","getName","toString","oName","name","throwIfDisposed","disposable","wasDisposed","defineProperty","value"],"mappings":";;;;;AAKA,GAAIA,WAAaC,MAAQA,KAAKD,WAAc,SAAUE,EAAGC,GAErD,QAASC,KAAOH,KAAKI,YAAcH,EADnC,IAAK,GAAII,KAAKH,GAAOA,EAAEI,eAAeD,KAAIJ,EAAEI,GAAKH,EAAEG,GAEnDJ,GAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,MAEnF,SAAWO,GACP,GAAsB,gBAAXC,SAAiD,gBAAnBA,QAAOC,QAAsB,CAClE,GAAIC,GAAIH,EAAQI,QAASF,QAAoBG,UAANF,IAAiBF,OAAOC,QAAUC,OAElD,kBAAXG,SAAyBA,OAAOC,KAC5CD,QAAQ,UAAW,UAAW,2CAA4CN,IAE/E,SAAUI,EAASF,GCVtB,YAGA,IAAAM,GAAAJ,EAAsC,2CAGhCK,EAAc,0BAEpBC,EAAA,SAAAC,GAQC,QAAAD,GACCE,EACAC,EACAC,GADA,SAAAD,IAAAA,EAAA,MACA,SAAAC,IAAAA,EAAA,MAEAH,EAAAI,KAAAzB,KAAMuB,EAASC,EAAgB,SAACE,GAC/BA,EAAEJ,WAAaA,IA2BlB,MAvCQvB,WAAAqB,EAAAC,GAiBGD,EAAAb,UAAAoB,QAAV,WAEC,MAAOR,IAGRC,EAAAb,UAAAqB,SAAA,WAEC,GAAIF,GAAI1B,KAAM6B,EAAQH,EAAEJ,UAGxB,OAFAO,GAAQA,EAAS,IAAMA,EAAQ,KAAQ,GAEhC,IAAMH,EAAEI,KAAO,KAAOD,EAAQH,EAAEH,QAAU,KAG3CH,EAAAW,gBAAP,SACCC,EACAV,EACAC,GAEA,GAAGS,EAAWC,YACb,KAAM,IAAIb,GAAwBE,EAAYC,IAGjDH,GAvCQF,EAAAA,WAFRV,QAAA0B,eAAAtB,EAAA,cAAAuB,OAAA,ID8BIvB,EAAAA,WAAkBQ","file":"System/Disposable/ObjectDisposedException.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\n */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../Exceptions/InvalidOperationException'], factory);\n    }\n})(function (require, exports) {\n    'use strict';\n    var InvalidOperationException_1 = require('../Exceptions/InvalidOperationException');\n    var NAME = 'ObjectDisposedException';\n    var ObjectDisposedException = (function (_super) {\n        __extends(ObjectDisposedException, _super);\n        function ObjectDisposedException(objectName, message, innerException) {\n            if (message === void 0) { message = null; }\n            if (innerException === void 0) { innerException = null; }\n            _super.call(this, message, innerException, function (_) {\n                _.objectName = objectName;\n            });\n        }\n        ObjectDisposedException.prototype.getName = function () {\n            return NAME;\n        };\n        ObjectDisposedException.prototype.toString = function () {\n            var _ = this, oName = _.objectName;\n            oName = oName ? ('{' + oName + '} ') : '';\n            return '[' + _.name + ': ' + oName + _.message + ']';\n        };\n        ObjectDisposedException.throwIfDisposed = function (disposable, objectName, message) {\n            if (disposable.wasDisposed)\n                throw new ObjectDisposedException(objectName, message);\n        };\n        return ObjectDisposedException;\n    }(InvalidOperationException_1.default));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ObjectDisposedException;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\n///<reference path=\"IDisposableAware.d.ts\"/>\r\n'use strict'; // For compatibility with (let, const, function, class);\r\n\r\nimport Exception from '../Exception';\r\nimport InvalidOperationException from '../Exceptions/InvalidOperationException';\r\n\r\n\r\nconst NAME:string = 'ObjectDisposedException';\r\n\r\nexport default\r\nclass ObjectDisposedException\r\nextends InvalidOperationException\r\n{\r\n\r\n\tobjectName:string;\r\n\r\n\t// For simplicity and consistency, lets stick with 1 signature.\r\n\tconstructor(\r\n\t\tobjectName:string,\r\n\t\tmessage:string = null,\r\n\t\tinnerException:Exception = null)\r\n\t{\r\n\t\tsuper(message, innerException, (_)=>{\r\n\t\t\t_.objectName = objectName;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n\ttoString():string\r\n\t{\r\n\t\tvar _ = this, oName = _.objectName;\r\n\t\toName = oName ? ('{' + oName + '} ') : '';\r\n\r\n\t\treturn '[' + _.name + ': ' + oName + _.message + ']';\r\n\t}\r\n\r\n\tstatic throwIfDisposed(\r\n\t\tdisposable:IDisposableAware,\r\n\t\tobjectName?:string,\r\n\t\tmessage?:string):void\r\n\t{\r\n\t\tif(disposable.wasDisposed)\r\n\t\t\tthrow new ObjectDisposedException(objectName, message);\r\n\t}\r\n\r\n}\r\n"]}