/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","./Exceptions/ArgumentException","./Exceptions/ArgumentNullException"],e)}(function(e,t){"use strict";function n(e){return e&&e.hasOwnProperty(d)&&e.hasOwnProperty(p)}function o(e,t){if(void 0===t&&(t=c),r(e,t+s+d),null===e)throw new l["default"](t+s+d);return e}function u(e,t){if(void 0===t&&(t=c),2!=e.length)throw new f["default"](t,"KeyValuePair tuples must be of length 2.");o(e[0],t)}function r(e,t){if(e===a)throw new f["default"](t,m);return e}function i(e,t){var i,l;if(e instanceof Array)u(e),i=e[0],l=r(e[1],y);else{if(!n(e))throw new f["default"](c,v);i=o(e.key),l=r(e.value,x)}return t(i,l)}var f=e("./Exceptions/ArgumentException"),l=e("./Exceptions/ArgumentNullException"),a=void 0,s=".",d="key",p="value",c="item",y=c+"[1]",x=c+s+p,v="Invalid type.  Must be a KeyValuePair or Tuple of length 2.",m="Cannot equal undefined.";t.isKeyValuePair=n,t.assertKey=o,t.assertTuple=u,t.assertNotUndefined=r,Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=i});
//# sourceMappingURL=KeyValueExtract.js.map
